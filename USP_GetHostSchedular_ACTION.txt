USE [smartindia]
GO
/****** Object:  StoredProcedure [dbo].[USP_GetHostSchedular_ACTION]    Script Date: 10-09-2020 15:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- AUTHOR		:	KSHETRA MOHAN MOHANTA
-- CREATE DATE	:	14-08-2020
-- DESCRIPTION	:	GET SCHEDULAR AND SCHEDULLING DETAILS
-- TABLES USED	:	[HOSTCOURSES],[HOSTSCHEDULAR],[USERREGISTRATIONS]
-- MODIFIED BY	:   NA
-- =============================================
ALTER PROCEDURE [dbo].[USP_GetHostSchedular_ACTION] 

	@P_ACTIONCODE				CHAR(1) ,
	@UserId		                BIGINT				=  0,
	@CourseId                   BIGINT              =  0,
	@SchedularId                BIGINT              =  0,
	@StartScheduleDate          nvarchar(64)        = NULL,
	@endScheduleDate            nvarchar(64)        = NULL,
	@StartTime                  nvarchar(32)        = NULL,
	@EndTime                    nvarchar(32)        = NULL

AS
BEGIN
SET NOCOUNT ON;
	 IF @P_ACTIONCODE = 'B'-- for bind  summary table 
	 BEGIN
			SELECT  
					 hs.CourseId 
					,hc.CourseName
					,MIN(hs.ScheduleDate) AS StartScheduleDate
					,MAX(hs.ScheduleDate) AS EndScheduleDate
					,convert(varchar(5), hs.StartTime, 108) aS StartTime
					,convert(varchar(5), hs.EndTime, 108) aS EndTime 
					,hs.Duration 
					,hs.BatchName
					,hs.UserId
					,hs.IsPublished
			FROM	HostSchedular hs 
			INNER JOIN
					HostCourses hc ON hc.CourseId = hs.CourseId
			INNER JOIN
					UserRegistrations UR on UR.UserId=HS.UserId
			WHERE hs.UserId = @UserId and hs.IsPublished <> 2 
			GROUP BY 
				   hs.UserId
				  ,hs.CourseId
				  ,hc.CourseName
				  ,hs.StartTime
				  ,hs.EndTime
				  ,hs.Duration 
				  ,hs.BatchName 
				  ,hs.IsPublished
			ORDER BY StartScheduleDate DESC 
		END;

	IF @P_ACTIONCODE = 'U'--  get schedular details view
             BEGIN
					SELECT		hs.CourseId, hc.CourseName, hs.ScheduleDate, CONVERT(varchar(5),hs.StartTime,108) as StartTime, 
								CONVERT(varchar(5),hs.EndTime,108) as EndTime, hs.ClassRoomId, hs.ClassRoomPwd,hs.Duration,
								hs.BatchName, hs.IsDeleted, hs.UpdatedById, hs.CreatedOn, hs.UpdatedOn, hs.Status, hs.SchedularId, 
								hc.UserId,IsPublished
					FROM		HostCourses hc 
					INNER JOIN	HostSchedular hs ON hc.CourseId = hs.CourseId
					INNER JOIN	UserRegistrations UR on UR.UserId=HS.UserId
					WHERE		hc.CourseId = @CourseId  and StartTime=@StartTime and EndTime=@EndTime  
								and  ScheduleDate >= @startScheduleDate and ScheduleDate <= @endScheduleDate
			 
			 END;
			 IF @P_ACTIONCODE = 'G'--  get schedular details for update
             BEGIN
					SELECT		hs.CourseId, hc.CourseName, hs.ScheduleDate, CONVERT(varchar(5),hs.StartTime,108) as StartTime, 
								CONVERT(varchar(5),hs.EndTime,108) as EndTime, hs.ClassRoomId, hs.ClassRoomPwd,hs.Duration,hs.BatchName, 
								hs.IsDeleted, hs.UpdatedById, hs.CreatedOn, hs.UpdatedOn, hs.Status, hs.SchedularId, hc.UserId
					FROM		HostCourses hc 
					INNER JOIN	HostSchedular hs ON hc.CourseId = hs.CourseId
					INNER JOIN	UserRegistrations UR on UR.UserId=HS.UserId
					WHERE	    SchedularId = @SchedularId  
			 
			 END;
			 IF @P_ACTIONCODE = 'P'--  get Publish schedular  detail for bind(Rescheduling)
             BEGIN

					SELECT		hs.CourseId, hc.CourseName,hs.ScheduleDate, CONVERT(varchar(5),hs.StartTime,108) as StartTime, 
								CONVERT(varchar(5),hs.EndTime,108) as EndTime, hs.ClassRoomId, hs.ClassRoomPwd,hs.Duration,
								hs.BatchName,hs.IsDeleted, hs.UpdatedById, hs.CreatedOn, hs.UpdatedOn, hs.Status, hs.SchedularId, hc.UserId
					FROM		HostCourses hc 
					INNER JOIN  HostSchedular hs ON hc.CourseId = hs.CourseId
					INNER JOIN  UserRegistrations UR on UR.UserId=HS.UserId
					WHERE       hs.UserId = @UserId and IsPublished=1  and hs.ScheduleDate >= DATEADD(D,-1,GETDATE())
					ORDER BY    hs.ScheduleDate desc
			 
			 END;
			

END

